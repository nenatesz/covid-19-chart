{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\covid-19_chart\\\\views\\\\src\\\\components\\\\charts.component.jsx\";\nimport React, { Component } from 'react';\nimport { Pie, Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartsComponent extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     country: props.country\n    // };\n\n    this.createStatisticsPieChart = sData => {\n      return this.spieChart = {\n        labels: ['Recovered', 'Critical', 'Active', 'New', 'Total'],\n        datasets: [{\n          backgroundColor: Object.values(this.CHART_COLORS),\n          data: [sData.cases.new, sData.cases.critical, sData.cases.recoverd, sData.cases.active, sData.cases.total]\n        }]\n      };\n    };\n\n    this.fetchChartData = country => {\n      if (country === null) {\n        return;\n      } // if (this.spieChart != null){\n      //     this.spieChart.destroy();\n      //     this.spieChart = undefined\n      // }\n\n\n      axios.get(`/api/statistics/${country}`).then(res => {\n        if (res) {\n          console.log(res.data.response[0]);\n          this.statsData = {\n            country: res.data.response[0].country,\n            deaths: res.data.response[0].deaths,\n            tests: res.data.response[0].tests,\n            cases: res.data.response[0].cases,\n            lastUpdate: new Date(res.data.response[0].time).toUTCString()\n          };\n          this.createStatisticsPieChart(res.data.response[0]);\n        }\n      });\n    };\n\n    this.statsData = {\n      country: undefined,\n      deaths: undefined,\n      tests: undefined,\n      cases: undefined,\n      lastUpdate: undefined\n    };\n    this.duration = ['Last One Week', 'Last Two Weeks', 'Last Three Weeks', 'Last One Month'];\n    this.selectedDuration = this.duration[0];\n    this.historicData = []; // this.sbarChart = undefined;\n\n    this.spieChart = undefined;\n    this.CHART_COLORS = {\n      red: 'rgb(255, 99, 132)',\n      orange: 'rgb(255, 159, 64)',\n      yellow: 'rgb(255, 205, 86)',\n      green: 'rgb(75, 192, 192)',\n      blue: 'rgb(54, 162, 235)',\n      purple: 'rgb(153, 102, 255)',\n      grey: 'rgb(201, 203, 207)'\n    };\n    this.fetchChartData();\n  }\n\n  componentDidUpdate() {\n    let country = this.props.country;\n    console.log('coun2' + country);\n    this.fetchChartData(country);\n    console.log('stat' + this.statsData.cases);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-justify-content charts-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"sbar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: this.createStatisticsPieChart,\n            options: {\n              title: {\n                display: true,\n                text: 'Average Rainfall per month',\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default ChartsComponent;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/covid-19_chart/views/src/components/charts.component.jsx"],"names":["React","Component","Pie","Doughnut","axios","ChartsComponent","constructor","props","createStatisticsPieChart","sData","spieChart","labels","datasets","backgroundColor","Object","values","CHART_COLORS","data","cases","new","critical","recoverd","active","total","fetchChartData","country","get","then","res","console","log","response","statsData","deaths","tests","lastUpdate","Date","time","toUTCString","undefined","duration","selectedDuration","historicData","red","orange","yellow","green","blue","purple","grey","componentDidUpdate","render","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Pie, Doughnut} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ChartsComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // this.state = {\r\n        //     country: props.country\r\n        // };\r\n\r\n        this.statsData = {\r\n            country: undefined,\r\n            deaths: undefined,\r\n            tests: undefined,\r\n            cases: undefined,\r\n            lastUpdate: undefined\r\n        };\r\n\r\n        this.duration = [\r\n            'Last One Week',\r\n            'Last Two Weeks',\r\n            'Last Three Weeks',\r\n            'Last One Month',\r\n        ];\r\n\r\n        this.selectedDuration = this.duration[0];\r\n        this.historicData = [];\r\n        // this.sbarChart = undefined;\r\n        this.spieChart = undefined;\r\n        \r\n        this.CHART_COLORS = {\r\n            red: 'rgb(255, 99, 132)',\r\n            orange: 'rgb(255, 159, 64)',\r\n            yellow: 'rgb(255, 205, 86)',\r\n            green: 'rgb(75, 192, 192)',\r\n            blue: 'rgb(54, 162, 235)',\r\n            purple: 'rgb(153, 102, 255)',\r\n            grey: 'rgb(201, 203, 207)'\r\n          };\r\n\r\n          this.fetchChartData()\r\n\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        let country = this.props.country\r\n\r\n        console.log('coun2' + country)\r\n        this.fetchChartData(country)\r\n        console.log('stat' + this.statsData.cases)\r\n    };\r\n\r\n    createStatisticsPieChart = (sData) => {\r\n       return this.spieChart = {\r\n         labels: ['Recovered', 'Critical', 'Active', 'New', 'Total'],\r\n         datasets: [\r\n           {\r\n             backgroundColor: Object.values(this.CHART_COLORS),\r\n             data: [\r\n                sData.cases.new,\r\n                sData.cases.critical,\r\n                sData.cases.recoverd,\r\n                sData.cases.active,\r\n                sData.cases.total,\r\n             ]\r\n           }\r\n         ]\r\n       };\r\n        \r\n    }\r\n\r\n\r\n    // createStatisticsPieChart(){\r\n    //     let item = document.getElementById(\"spie\").getContext('2d');\r\n        \r\n    //     if(item !== null){\r\n    //         // let colors = Chart().helpers.colors\r\n    //         this.spieChart = new Chart(item, {\r\n    //             type: 'pie',\r\n    //             data: {\r\n    //                 labels: ['Recovered', 'Critical', 'Active', 'New', 'Total'],\r\n    //                 datasets: [{\r\n    //                     backgroundColor: Object.values(this.CHART_COLORS),\r\n    //                     data: [\r\n    //                         this.statsData.cases.new,\r\n    //                         this.statsData.cases.critical,\r\n    //                         this.statsData.cases.recoverd,\r\n    //                         this.statsData.cases.active,\r\n    //                         this.statsData.cases.total,\r\n    //                     ]\r\n    //                 }]\r\n    //             },\r\n    //             options: {\r\n    //                 responsive: true,\r\n    //                 plugins: {\r\n    //                     legend: {\r\n    //                         position: 'bottom',\r\n    //                     },\r\n    //                     title: {\r\n    //                         display: true,\r\n    //                         text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n\r\n    //         })\r\n    //     }\r\n    // };\r\n\r\n    \r\n    \r\n    \r\n    fetchChartData = (country) => {\r\n        if (country === null) {\r\n            return\r\n        }\r\n\r\n        // if (this.spieChart != null){\r\n        //     this.spieChart.destroy();\r\n        //     this.spieChart = undefined\r\n        // }\r\n\r\n        axios.get(`/api/statistics/${country}`).then(res=>{\r\n            if(res){\r\n\r\n                console.log(res.data.response[0])\r\n\r\n                this.statsData = {\r\n                    country: res.data.response[0].country,\r\n                    deaths: res.data.response[0].deaths,\r\n                    tests: res.data.response[0].tests,\r\n                    cases: res.data.response[0].cases,\r\n                    lastUpdate: (new Date(res.data.response[0].time)).toUTCString()\r\n                };\r\n                \r\n\r\n                this.createStatisticsPieChart(res.data.response[0])\r\n\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className='row flex-justify-content charts-component'>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <canvas id=\"sbar\"></canvas>\r\n                    </div>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                    <Pie\r\n                    data={this.createStatisticsPieChart}\r\n                    options={{\r\n                      title:{\r\n                        display:true,\r\n                        text:'Average Rainfall per month',\r\n                        fontSize:20\r\n                      },\r\n                      legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                        \r\n                      }\r\n                    }}\r\n                  />\r\n                    </div>\r\n                </div>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default ChartsComponent\r\n"]},"metadata":{},"sourceType":"module"}