{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\covid-19_chart\\\\views\\\\src\\\\components\\\\list.component.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListComponent = ({\n  onCountrySelected\n}) => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  let countries_arr = [];\n\n  const fetchCountries = () => {\n    axios.get('/api/countries/list').then(res => {\n      if (res) {\n        countries_arr = res.data.response;\n        countries_arr.unshift(\"All\");\n        console.log('arr' + countries_arr);\n        let selectedCountry = countries_arr[0];\n        onCountrySelected(selectedCountry);\n        setCountries(countries_arr);\n        console.log('arr1' + countries);\n      } else {\n        setCountries(null);\n      }\n    }).catch(error => {\n      setCountries(null);\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  const handleSelectedCountries = (e, option, item) => {\n    const index = e.target.selectedIndex + 1;\n    console.log('i' + index);\n    const selectedCountry = countries[index];\n    onCountrySelected(selectedCountry);\n    console.log('sel' + selectedCountry);\n  };\n\n  if (countries !== null && countries.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lc-main-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"fg-greyMouse\",\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        \"data-clear-button\": true,\n        onChange: handleSelectedCountries,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), countries.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 56\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lc-main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"fg-grayMouse\",\n        children: \"It appears the API is not available ! Thats bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(ListComponent, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n\n_c = ListComponent;\nexport default ListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListComponent\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/covid-19_chart/views/src/components/list.component.jsx"],"names":["axios","React","useEffect","useState","ListComponent","onCountrySelected","countries","setCountries","countries_arr","fetchCountries","get","then","res","data","response","unshift","console","log","selectedCountry","catch","error","handleSelectedCountries","e","option","item","index","target","selectedIndex","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAyB;AAAA;;AAE3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAIK,aAAa,GAAG,EAApB;;AAEA,QAAMC,cAAc,GAAG,MAAM;AACzBT,IAAAA,KAAK,CAACU,GAAN,CAAU,qBAAV,EAAiCC,IAAjC,CAAsCC,GAAG,IAAE;AAEvC,UAAGA,GAAH,EAAO;AAEHJ,QAAAA,aAAa,GAAGI,GAAG,CAACC,IAAJ,CAASC,QAAzB;AACAN,QAAAA,aAAa,CAACO,OAAd,CAAsB,KAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAQT,aAApB;AACA,YAAIU,eAAe,GAAGV,aAAa,CAAC,CAAD,CAAnC;AACAH,QAAAA,iBAAiB,CAACa,eAAD,CAAjB;AACAX,QAAAA,YAAY,CAACC,aAAD,CAAZ;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAASX,SAArB;AACH,OATD,MASK;AACDC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AAEJ,KAfD,EAeGY,KAfH,CAeSC,KAAK,IAAE;AACZb,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACH,KAlBD;AAmBH,GApBD;;AAsBAlB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,cAAc;AAEjB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMY,uBAAuB,GAAG,CAACC,CAAD,EAAIC,MAAJ,EAAYC,IAAZ,KAAqB;AACjD,UAAMC,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASC,aAAT,GAAyB,CAAvC;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMQ,KAAlB;AACA,UAAMP,eAAe,GAAGZ,SAAS,CAACmB,KAAD,CAAjC;AACApB,IAAAA,iBAAiB,CAACa,eAAD,CAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAQC,eAApB;AACH,GAND;;AAQA,MAAIZ,SAAS,KAAK,IAAd,IAAsBA,SAAS,CAACsB,MAAV,GAAmB,CAA7C,EAA+C;AAE3C,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,iCAAR;AAA0B,QAAA,QAAQ,EAAEP,uBAApC;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGQf,SAAS,CAACuB,GAAV,CAAc,CAACL,IAAD,EAAOC,KAAP,kBAAiB;AAAoB,UAAA,KAAK,EAAED,IAA3B;AAAA,oBAAkCA;AAAlC,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,gBAA/B,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAbD,MAaK;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AACJ,CA7DD;;GAAMrB,a;;KAAAA,a;AA+DN,eAAeA,aAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst ListComponent = ({onCountrySelected}) => {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    let countries_arr = [];\r\n\r\n    const fetchCountries = () => {\r\n        axios.get('/api/countries/list').then(res=>{\r\n\r\n            if(res){\r\n\r\n                countries_arr = res.data.response\r\n                countries_arr.unshift(\"All\");\r\n                console.log('arr' + countries_arr)\r\n                let selectedCountry = countries_arr[0];\r\n                onCountrySelected(selectedCountry);\r\n                setCountries(countries_arr)\r\n                console.log('arr1' + countries)\r\n            }else{\r\n                setCountries(null)\r\n            }\r\n\r\n        }).catch(error=>{\r\n            setCountries(null);\r\n            console.error(error)\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCountries()\r\n        \r\n    }, [])\r\n\r\n    const handleSelectedCountries = (e, option, item) => {\r\n        const index = e.target.selectedIndex + 1;\r\n        console.log('i' + index)\r\n        const selectedCountry = countries[index]\r\n        onCountrySelected(selectedCountry);\r\n        console.log('sel' + selectedCountry);\r\n    };\r\n\r\n    if (countries !== null && countries.length > 0){\r\n        \r\n        return (\r\n            <div className=\"lc-main-div\">\r\n                <h6 className=\"fg-greyMouse\">Country</h6>\r\n                <select data-clear-button onChange={handleSelectedCountries}>\r\n                    <option>Select</option>\r\n                    {\r\n                        countries.map((item, index) => <option key={index} value={item}>{item}</option>)\r\n                    }\r\n                </select>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"lc-main-div\">\r\n                <h6 className=\"fg-grayMouse\">It appears the API is not available ! Thats bad</h6>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ListComponent\r\n"]},"metadata":{},"sourceType":"module"}