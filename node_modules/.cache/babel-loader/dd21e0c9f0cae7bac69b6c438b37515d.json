{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\covid-19_chart\\\\views\\\\src\\\\components\\\\charts.component.jsx\";\nimport React, { Component } from 'react';\nimport { Pie, Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartsComponent extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     country: props.country\n    // };\n\n    this.createStatisticsPieChart = () => {\n      if (this.statsData != undefined) {\n        return;\n      }\n\n      return this.spieChart = {\n        labels: ['New', 'Critical', 'Recovered', 'Active'],\n        datasets: [{\n          backgroundColor: Object.values(this.CHART_COLORS),\n          data: [this.removePlusSign(this.statsData.cases.new), this.statsData.cases.critical, this.statsData.cases.recoverd, this.statsData.cases.active]\n        }]\n      };\n    };\n\n    this.fetchChartData = country => {\n      if (country === null) {\n        return;\n      } // if (this.spieChart != null){\n      //     this.spieChart.destroy();\n      //     this.spieChart = undefined\n      // }\n\n\n      axios.get(`/api/statistics/${country}`).then(res => {\n        if (res) {\n          console.log(res.data.response[0]);\n          this.statsData = {\n            country: res.data.response[0].country,\n            deaths: res.data.response[0].deaths,\n            tests: res.data.response[0].tests,\n            cases: res.data.response[0].cases,\n            lastUpdate: new Date(res.data.response[0].time).toUTCString()\n          };\n          this.createStatisticsPieChart();\n        }\n      });\n    };\n\n    this.removePlusSign = item => {\n      if (item) {\n        if (item.includes('+')) {\n          return parseInt(item.split('+')[1]);\n        } else {\n          return item;\n        }\n      } else {\n        return item;\n      }\n    };\n\n    this.statsData = {\n      country: undefined,\n      deaths: undefined,\n      tests: undefined,\n      cases: undefined,\n      lastUpdate: undefined\n    };\n    this.duration = ['Last One Week', 'Last Two Weeks', 'Last Three Weeks', 'Last One Month'];\n    this.selectedDuration = this.duration[0];\n    this.historicData = []; // this.sbarChart = undefined;\n\n    this.spieChart = undefined;\n    this.CHART_COLORS = {\n      red: 'rgb(255, 99, 132)',\n      orange: 'rgb(255, 159, 64)',\n      yellow: 'rgb(255, 205, 86)',\n      green: 'rgb(75, 192, 192)',\n      blue: 'rgb(54, 162, 235)',\n      purple: 'rgb(153, 102, 255)',\n      grey: 'rgb(201, 203, 207)'\n    };\n  }\n\n  componentDidUpdate() {\n    let country = this.props.country;\n    console.log('coun2' + country);\n    this.fetchChartData(country);\n    console.log('stat' + this.statsData.cases);\n    console.log(this.spieChart);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-justify-content charts-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"sbar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: this.spieChart,\n            options: {\n              responsive: true,\n              title: {\n                display: true,\n                position: 'top',\n                text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate,\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: 'top'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default ChartsComponent;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/covid-19_chart/views/src/components/charts.component.jsx"],"names":["React","Component","Pie","Doughnut","axios","ChartsComponent","constructor","props","createStatisticsPieChart","statsData","undefined","spieChart","labels","datasets","backgroundColor","Object","values","CHART_COLORS","data","removePlusSign","cases","new","critical","recoverd","active","fetchChartData","country","get","then","res","console","log","response","deaths","tests","lastUpdate","Date","time","toUTCString","item","includes","parseInt","split","duration","selectedDuration","historicData","red","orange","yellow","green","blue","purple","grey","componentDidUpdate","render","responsive","title","display","position","text","fontSize","legend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Pie, Doughnut} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ChartsComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // this.state = {\r\n        //     country: props.country\r\n        // };\r\n\r\n        this.statsData = {\r\n            country: undefined,\r\n            deaths: undefined,\r\n            tests: undefined,\r\n            cases: undefined,\r\n            lastUpdate: undefined\r\n        };\r\n\r\n        this.duration = [\r\n            'Last One Week',\r\n            'Last Two Weeks',\r\n            'Last Three Weeks',\r\n            'Last One Month',\r\n        ];\r\n\r\n        this.selectedDuration = this.duration[0];\r\n        this.historicData = [];\r\n        // this.sbarChart = undefined;\r\n        this.spieChart = undefined;\r\n        \r\n        this.CHART_COLORS = {\r\n            red: 'rgb(255, 99, 132)',\r\n            orange: 'rgb(255, 159, 64)',\r\n            yellow: 'rgb(255, 205, 86)',\r\n            green: 'rgb(75, 192, 192)',\r\n            blue: 'rgb(54, 162, 235)',\r\n            purple: 'rgb(153, 102, 255)',\r\n            grey: 'rgb(201, 203, 207)'\r\n          };\r\n    };\r\n\r\n    \r\n    componentDidUpdate(){\r\n        let country = this.props.country\r\n\r\n        console.log('coun2' + country)\r\n        this.fetchChartData(country)\r\n        console.log('stat' + this.statsData.cases)\r\n        console.log(this.spieChart)\r\n    };\r\n\r\n    createStatisticsPieChart = () => {\r\n        if(this.statsData != undefined){\r\n            return\r\n        }\r\n       return this.spieChart = {\r\n         labels: ['New', 'Critical', 'Recovered', 'Active'],\r\n         datasets: [\r\n           {\r\n             backgroundColor: Object.values(this.CHART_COLORS),\r\n             data: [\r\n                this.removePlusSign(this.statsData.cases.new),\r\n                this.statsData.cases.critical,\r\n                this.statsData.cases.recoverd,\r\n                this.statsData.cases.active,\r\n             ]\r\n           }\r\n         ]\r\n       };\r\n        \r\n    }           \r\n    \r\n    fetchChartData = (country) => {\r\n        if (country === null) {\r\n            return\r\n        }\r\n\r\n        // if (this.spieChart != null){\r\n        //     this.spieChart.destroy();\r\n        //     this.spieChart = undefined\r\n        // }\r\n\r\n        axios.get(`/api/statistics/${country}`).then(res=>{\r\n            if(res){\r\n\r\n                console.log( res.data.response[0])\r\n\r\n                this.statsData = {\r\n                    country: res.data.response[0].country,\r\n                    deaths: res.data.response[0].deaths,\r\n                    tests: res.data.response[0].tests,\r\n                    cases: res.data.response[0].cases,\r\n                    lastUpdate: (new Date(res.data.response[0].time)).toUTCString()\r\n                };\r\n                \r\n\r\n                this.createStatisticsPieChart()\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    removePlusSign = (item) => {\r\n        if(item){\r\n\r\n            if(item.includes('+')){\r\n               return parseInt(item.split('+')[1]);\r\n            }else{\r\n                return item;\r\n            }\r\n        }else{\r\n           return item\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className='row flex-justify-content charts-component'>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <canvas id=\"sbar\"></canvas>\r\n                    </div>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                    <Pie\r\n                    data={this.spieChart}\r\n                    options={{\r\n                      responsive: true,\r\n                      title:{\r\n                        display:true,\r\n                        position:'top',\r\n                        text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate,\r\n                        fontSize:20\r\n                      },\r\n                      legend:{\r\n                        display:true,\r\n                        position:'top',\r\n                        \r\n                      }\r\n                    }}\r\n                  />\r\n                    </div>\r\n                </div>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default ChartsComponent\r\n"]},"metadata":{},"sourceType":"module"}