{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\covid-19_chart\\\\views\\\\src\\\\components\\\\charts.component.jsx\";\nimport React, { Component } from 'react';\nimport { Chart } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartsComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createStatisticsPieChart = () => {\n      let item = document.getElementById(\"spie\").getContext('2d');\n\n      if (item !== null) {\n        // let colors = Chart().helpers.colors\n        this.spieChart = new Chart(item, {\n          type,\n          data: {\n            labels: ['Recovered', 'Critical', 'Active', 'New', 'Total'],\n            datasets: [{\n              backgroundColor: Object.values(this.CHART_COLORS),\n              data: [this.statsData.cases.new, this.statsData.cases.critical, this.statsData.cases.recoverd, this.statsData.cases.active, this.statsData.cases.total]\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'bottom'\n              },\n              title: {\n                display: true,\n                text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate\n              }\n            }\n          }\n        });\n      }\n    };\n\n    this.fetchChartData = country => {\n      if (country === null) {\n        return;\n      }\n\n      if (this.spieChart != null) {\n        this.spieChart.destroy();\n        this.spieChart = undefined;\n      }\n\n      axios.get(`/api/statistics/${country}`).then(res => {\n        if (res) {\n          this.statsData = {\n            country: res.data.response[0].country,\n            deaths: res.data.response[0].deaths,\n            tests: res.data.response[0].tests,\n            cases: res.data.response[0].cases,\n            lastUpdate: new Date(res.data.response[0].time).toUTCString()\n          };\n          this.createStatisticsPieChart();\n        }\n      });\n    };\n\n    this.state = {\n      country: props.country\n    };\n    this.statsData = {\n      country: undefined,\n      deaths: undefined,\n      tests: undefined,\n      cases: undefined,\n      lastUpdate: undefined\n    };\n    this.duration = ['Last One Week', 'Last Two Weeks', 'Last Three Weeks', 'Last One Month'];\n    this.selectedDuration = this.duration[0];\n    this.historicData = [];\n    this.sbarChart = undefined;\n    this.spieChart = undefined;\n    this.CHART_COLORS = {\n      red: 'rgb(255, 99, 132)',\n      orange: 'rgb(255, 159, 64)',\n      yellow: 'rgb(255, 205, 86)',\n      green: 'rgb(75, 192, 192)',\n      blue: 'rgb(54, 162, 235)',\n      purple: 'rgb(153, 102, 255)',\n      grey: 'rgb(201, 203, 207)'\n    }; // this.createStatisticsPieChart = this.createStatisticsPieChart.bind(this)\n  }\n\n  componentDidUpdate() {\n    let country = this.props.getSelectedCountry();\n    console.log('coun2' + country);\n    this.fetchChartData(country);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-justify-content charts-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"sbar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"spie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default ChartsComponent;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/covid-19_chart/views/src/components/charts.component.jsx"],"names":["React","Component","Chart","axios","ChartsComponent","constructor","props","createStatisticsPieChart","item","document","getElementById","getContext","spieChart","type","data","labels","datasets","backgroundColor","Object","values","CHART_COLORS","statsData","cases","new","critical","recoverd","active","total","options","responsive","plugins","legend","position","title","display","text","country","lastUpdate","fetchChartData","destroy","undefined","get","then","res","response","deaths","tests","Date","time","toUTCString","state","duration","selectedDuration","historicData","sbarChart","red","orange","yellow","green","blue","purple","grey","componentDidUpdate","getSelectedCountry","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Chart} from 'chart.js';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ChartsComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            country: props.country\r\n        };\r\n\r\n        this.statsData = {\r\n            country: undefined,\r\n            deaths: undefined,\r\n            tests: undefined,\r\n            cases: undefined,\r\n            lastUpdate: undefined\r\n        };\r\n\r\n        this.duration = [\r\n            'Last One Week',\r\n            'Last Two Weeks',\r\n            'Last Three Weeks',\r\n            'Last One Month',\r\n        ];\r\n\r\n        this.selectedDuration = this.duration[0];\r\n        this.historicData = [];\r\n        this.sbarChart = undefined;\r\n        this.spieChart = undefined;\r\n\r\n        this.CHART_COLORS = {\r\n            red: 'rgb(255, 99, 132)',\r\n            orange: 'rgb(255, 159, 64)',\r\n            yellow: 'rgb(255, 205, 86)',\r\n            green: 'rgb(75, 192, 192)',\r\n            blue: 'rgb(54, 162, 235)',\r\n            purple: 'rgb(153, 102, 255)',\r\n            grey: 'rgb(201, 203, 207)'\r\n          };\r\n\r\n        // this.createStatisticsPieChart = this.createStatisticsPieChart.bind(this)\r\n\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        let country = this.props.getSelectedCountry()\r\n        console.log('coun2' + country)\r\n        this.fetchChartData(country)\r\n    }\r\n\r\n    createStatisticsPieChart = () => {\r\n        let item = document.getElementById(\"spie\").getContext('2d');\r\n        \r\n        if(item !== null){\r\n            // let colors = Chart().helpers.colors\r\n            this.spieChart = new Chart(item, {\r\n                type,\r\n                data: {\r\n                    labels: ['Recovered', 'Critical', 'Active', 'New', 'Total'],\r\n                    datasets: [{\r\n                        backgroundColor: Object.values(this.CHART_COLORS),\r\n                        data: [\r\n                            this.statsData.cases.new,\r\n                            this.statsData.cases.critical,\r\n                            this.statsData.cases.recoverd,\r\n                            this.statsData.cases.active,\r\n                            this.statsData.cases.total,\r\n                        ]\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'bottom',\r\n                        },\r\n                        title: {\r\n                            display: true,\r\n                            text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate\r\n                        }\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n    };\r\n\r\n    fetchChartData = (country) => {\r\n        if (country === null) {\r\n            return\r\n        }\r\n\r\n        if (this.spieChart != null){\r\n            this.spieChart.destroy();\r\n            this.spieChart = undefined\r\n        }\r\n\r\n        axios.get(`/api/statistics/${country}`).then(res=>{\r\n            if(res){\r\n\r\n                this.statsData = {\r\n                    country: res.data.response[0].country,\r\n                    deaths: res.data.response[0].deaths,\r\n                    tests: res.data.response[0].tests,\r\n                    cases: res.data.response[0].cases,\r\n                    lastUpdate: (new Date(res.data.response[0].time)).toUTCString()\r\n                };\r\n\r\n                this.createStatisticsPieChart()\r\n\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className='row flex-justify-content charts-component'>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <canvas id=\"sbar\"></canvas>\r\n                    </div>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <canvas id=\"spie\"></canvas>\r\n                    </div>\r\n                </div>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default ChartsComponent\r\n"]},"metadata":{},"sourceType":"module"}