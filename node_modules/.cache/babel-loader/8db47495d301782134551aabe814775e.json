{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\covid-19_chart\\\\views\\\\src\\\\components\\\\charts.component.jsx\";\nimport React, { Component } from 'react';\nimport { Chart } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartsComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchChartData = country => {\n      if (country === null) {\n        return;\n      }\n\n      if (this.spieChart != null) {\n        this.spieChart.destroy();\n        this.spieChart = undefined;\n      }\n\n      axios.get(`/api/statistics/${country}`).then(res => {\n        if (res) {\n          this.statsData = {\n            country: res.data.response[0].country,\n            deaths: res.data.response[0].deaths,\n            tests: res.data.response[0].tests,\n            cases: res.data.response[0].cases,\n            lastUpdate: new Date(res.data.response[0].time).toUTCString()\n          };\n          this.createStatisticsPieChart();\n        }\n      });\n    };\n\n    this.state = {\n      country: props.country\n    };\n    this.statsData = {\n      country: undefined,\n      deaths: undefined,\n      tests: undefined,\n      cases: undefined,\n      lastUpdate: undefined\n    };\n    this.duration = ['Last One Week', 'Last Two Weeks', 'Last Three Weeks', 'Last One Month'];\n    this.selectedDuration = this.duration[0];\n    this.historicData = [];\n    this.sbarChart = undefined;\n    this.spieChart = undefined;\n    this.CHART_COLORS = {\n      red: 'rgb(255, 99, 132)',\n      orange: 'rgb(255, 159, 64)',\n      yellow: 'rgb(255, 205, 86)',\n      green: 'rgb(75, 192, 192)',\n      blue: 'rgb(54, 162, 235)',\n      purple: 'rgb(153, 102, 255)',\n      grey: 'rgb(201, 203, 207)'\n    };\n    this.createStatisticsPieChart = this.createStatisticsPieChart.bind(this);\n  }\n\n  componentDidUpdate() {\n    let country = this.props.getSelectedCountry();\n    console.log('coun2' + country);\n    this.fetchChartData(country);\n  }\n\n  createStatisticsPieChart() {\n    let item = document.getElementById(\"spie\");\n\n    if (item !== null) {\n      // let colors = Chart().helpers.colors\n      this.spieChart = new Chart(item, {\n        type: 'pie',\n        data: {\n          labels: ['Recovered', 'Critical', 'Active', 'New', 'Total'],\n          datasets: [{\n            backgroundColor: Object.values(this.CHART_COLORS),\n            data: [this.statsData.cases.new, this.statsData.cases.critical, this.statsData.cases.recoverd, this.statsData.cases.active, this.statsData.cases.total]\n          }]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'bottom'\n            },\n            title: {\n              display: true,\n              text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate\n            }\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-justify-content charts-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"sbar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bar cell-6 fg-grayBlue\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"spie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default ChartsComponent;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/covid-19_chart/views/src/components/charts.component.jsx"],"names":["React","Component","Chart","axios","ChartsComponent","constructor","props","fetchChartData","country","spieChart","destroy","undefined","get","then","res","statsData","data","response","deaths","tests","cases","lastUpdate","Date","time","toUTCString","createStatisticsPieChart","state","duration","selectedDuration","historicData","sbarChart","CHART_COLORS","red","orange","yellow","green","blue","purple","grey","bind","componentDidUpdate","getSelectedCountry","console","log","item","document","getElementById","type","labels","datasets","backgroundColor","Object","values","new","critical","recoverd","active","total","options","responsive","plugins","legend","position","title","display","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Chart} from 'chart.js';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ChartsComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            country: props.country\r\n        };\r\n\r\n        this.statsData = {\r\n            country: undefined,\r\n            deaths: undefined,\r\n            tests: undefined,\r\n            cases: undefined,\r\n            lastUpdate: undefined\r\n        };\r\n\r\n        this.duration = [\r\n            'Last One Week',\r\n            'Last Two Weeks',\r\n            'Last Three Weeks',\r\n            'Last One Month',\r\n        ];\r\n\r\n        this.selectedDuration = this.duration[0];\r\n        this.historicData = [];\r\n        this.sbarChart = undefined;\r\n        this.spieChart = undefined;\r\n\r\n        this.CHART_COLORS = {\r\n            red: 'rgb(255, 99, 132)',\r\n            orange: 'rgb(255, 159, 64)',\r\n            yellow: 'rgb(255, 205, 86)',\r\n            green: 'rgb(75, 192, 192)',\r\n            blue: 'rgb(54, 162, 235)',\r\n            purple: 'rgb(153, 102, 255)',\r\n            grey: 'rgb(201, 203, 207)'\r\n          };\r\n\r\n        this.createStatisticsPieChart = this.createStatisticsPieChart.bind(this)\r\n\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        let country = this.props.getSelectedCountry()\r\n        console.log('coun2' + country)\r\n        this.fetchChartData(country)\r\n    }\r\n\r\n    createStatisticsPieChart(){\r\n        let item = document.getElementById(\"spie\");\r\n        \r\n        if(item !== null){\r\n            // let colors = Chart().helpers.colors\r\n            this.spieChart = new Chart(item, {\r\n                type: 'pie',\r\n                data: {\r\n                    labels: ['Recovered', 'Critical', 'Active', 'New', 'Total'],\r\n                    datasets: [{\r\n                        backgroundColor: Object.values(this.CHART_COLORS),\r\n                        data: [\r\n                            this.statsData.cases.new,\r\n                            this.statsData.cases.critical,\r\n                            this.statsData.cases.recoverd,\r\n                            this.statsData.cases.active,\r\n                            this.statsData.cases.total,\r\n                        ]\r\n                    }]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'bottom',\r\n                        },\r\n                        title: {\r\n                            display: true,\r\n                            text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate\r\n                        }\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n    };\r\n\r\n    fetchChartData = (country) => {\r\n        if (country === null) {\r\n            return\r\n        }\r\n\r\n        if (this.spieChart != null){\r\n            this.spieChart.destroy();\r\n            this.spieChart = undefined\r\n        }\r\n\r\n        axios.get(`/api/statistics/${country}`).then(res=>{\r\n            if(res){\r\n\r\n                this.statsData = {\r\n                    country: res.data.response[0].country,\r\n                    deaths: res.data.response[0].deaths,\r\n                    tests: res.data.response[0].tests,\r\n                    cases: res.data.response[0].cases,\r\n                    lastUpdate: (new Date(res.data.response[0].time)).toUTCString()\r\n                };\r\n\r\n                this.createStatisticsPieChart()\r\n\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className='row flex-justify-content charts-component'>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <canvas id=\"sbar\"></canvas>\r\n                    </div>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <canvas id=\"spie\"></canvas>\r\n                    </div>\r\n                </div>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default ChartsComponent\r\n"]},"metadata":{},"sourceType":"module"}