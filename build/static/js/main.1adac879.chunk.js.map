{"version":3,"sources":["components/charts.component.jsx","components/list.component.jsx","components/main.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["ChartsComponent","props","createStatisticsPieChart","setState","spieChart","labels","datasets","backgroundColor","Object","values","CHART_COLORS","data","removePlusSign","statsData","cases","new","critical","recoverd","active","createStatisticsBarChart","sbarChart","fetchChartData","country","axios","get","then","res","console","log","response","deaths","tests","lastUpdate","Date","time","toUTCString","item","includes","parseInt","split","state","undefined","duration","selectedDuration","historicData","red","orange","yellow","green","blue","purple","grey","prevProps","this","className","options","title","display","text","fontSize","legend","position","responsive","Component","ListComponent","onCountrySelected","useState","countries","setCountries","countries_arr","useEffect","unshift","selectedCountry","catch","error","length","onChange","e","option","index","target","selectedIndex","map","value","MainComponent","setCountry","App","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1adac879.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Pie, Bar} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ChartsComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            spieChart: undefined,\r\n            sbarChart: undefined\r\n        };\r\n\r\n        this.statsData = {\r\n            country: undefined,\r\n            deaths: undefined,\r\n            tests: undefined,\r\n            cases: undefined,\r\n            lastUpdate: undefined\r\n        };\r\n\r\n        this.duration = [\r\n            'Last One Week',\r\n            'Last Two Weeks',\r\n            'Last Three Weeks',\r\n            'Last One Month',\r\n        ];\r\n        \r\n        this.selectedDuration = this.duration[0];\r\n        this.historicData = [];\r\n        // this.sbarChart = undefined;\r\n        // this.spieChart = undefined;\r\n        \r\n        this.CHART_COLORS = {\r\n            red: 'rgb(255, 99, 132)',\r\n            orange: 'rgb(26, 17, 9)',\r\n            yellow: 'rgb(255, 205, 86)',\r\n            green: 'rgb(75, 192, 192)',\r\n            blue: 'rgb(54, 162, 235)',\r\n            purple: 'rgb(153, 102, 255)',\r\n            grey: 'rgb(201, 203, 207)'\r\n          };\r\n    };\r\n\r\n    \r\n    componentDidUpdate(prevProps){\r\n        // let country = this.props.country\r\n        // console.log('coun2' + this.props.country)\r\n        \r\n        if(this.props.country !== prevProps.country){\r\n\r\n            this.fetchChartData(this.props.country)\r\n        }\r\n        \r\n        // // console.log('stat' + this.statsData.cases)\r\n        // console.log('spie' + this.spieChart)\r\n    };\r\n\r\n    createStatisticsPieChart = () => {\r\n\r\n        this.setState({spieChart: { \r\n              labels: ['New', 'Critical', 'Recovered', 'Active'],\r\n              datasets: [\r\n                {\r\n                  backgroundColor: Object.values(this.CHART_COLORS),\r\n                  data: [\r\n                     this.removePlusSign(this.statsData.cases.new),\r\n                     this.statsData.cases.critical,\r\n                     this.statsData.cases.recoverd,\r\n                     this.statsData.cases.active,\r\n                  ]\r\n                }\r\n              ]\r\n            }});       \r\n    };\r\n    \r\n    createStatisticsBarChart = () => {\r\n\r\n        this.setState({sbarChart: { \r\n            labels: ['New', 'Critical', 'Recovered', 'Active'],\r\n            datasets: [\r\n              {\r\n                backgroundColor: Object.values(this.CHART_COLORS),\r\n                data: [\r\n                   this.removePlusSign(this.statsData.cases.new),\r\n                   this.statsData.cases.critical,\r\n                   this.statsData.cases.recoverd,\r\n                   this.statsData.cases.active,\r\n                ]\r\n              }\r\n            ]\r\n          }});     \r\n\r\n    }\r\n    \r\n    fetchChartData = (country) => {\r\n        if (country === null) {\r\n            return\r\n        }\r\n\r\n        axios.get(`/api/statistics/${country}`).then(res=>{\r\n            if(res){\r\n\r\n                console.log( res.data.response[0])\r\n\r\n                this.statsData = {\r\n                    country: res.data.response[0].country,\r\n                    deaths: res.data.response[0].deaths,\r\n                    tests: res.data.response[0].tests,\r\n                    cases: res.data.response[0].cases,\r\n                    lastUpdate: (new Date(res.data.response[0].time)).toUTCString()\r\n                };\r\n                \r\n\r\n                \r\n                this.createStatisticsPieChart()\r\n                this.createStatisticsBarChart()\r\n            }\r\n        })\r\n    }\r\n\r\n    removePlusSign = (item) => {\r\n        if(item){\r\n\r\n            if(item.includes('+')){\r\n               return parseInt(item.split('+')[1]);\r\n            }else{\r\n                return item;\r\n            }\r\n        }else{\r\n           return item\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className='row flex-justify-content charts-component'>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <Bar\r\n                            data={this.state.sbarChart}\r\n                            options={{\r\n                                title:{\r\n                                display:true,\r\n                                text:'Average Rainfall per month',\r\n                                fontSize:20\r\n                                },\r\n                                legend:{\r\n                                display:true,\r\n                                position:'right'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className='stats-bar cell-6 fg-grayBlue'>\r\n                        <Pie\r\n                        data={this.state.spieChart}\r\n                        options={{\r\n                        responsive: true,\r\n                        title:{\r\n                            display:true,\r\n                            position:'top',\r\n                            text: this.statsData.country + ' - Last Updated: ' + this.statsData.lastUpdate,\r\n                            fontSize:20\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'top',\r\n                            \r\n                        }\r\n                        }}\r\n                    />\r\n                    </div>\r\n                </div>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default ChartsComponent\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst ListComponent = ({onCountrySelected}) => {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    let countries_arr = [];\r\n\r\n    const fetchCountries = () => {\r\n        axios.get('/api/countries/list').then(res=>{\r\n\r\n            if(res){\r\n\r\n                countries_arr = res.data.response\r\n                countries_arr.unshift(\"All\");\r\n                console.log('arr' + countries_arr)\r\n                let selectedCountry = countries_arr[0];\r\n                onCountrySelected(selectedCountry);\r\n                setCountries(countries_arr)\r\n                console.log('arr1' + countries)\r\n            }else{\r\n                setCountries(null)\r\n            }\r\n\r\n        }).catch(error=>{\r\n            setCountries(null);\r\n            console.error(error)\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCountries()\r\n        \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const handleSelectedCountries = (e, option, item) => {\r\n        const index = e.target.selectedIndex;\r\n        console.log('i' + index)\r\n        const selectedCountry = countries[index]\r\n        onCountrySelected(selectedCountry);\r\n        console.log('sel' + selectedCountry);\r\n    };\r\n\r\n    if (countries !== null && countries.length > 0){\r\n        \r\n        return (\r\n            <div className=\"lc-main-div\">\r\n                <h6 className=\"fg-greyMouse\">Country</h6>\r\n                <select data-clear-button onChange={handleSelectedCountries}>\r\n                    {\r\n                        countries.map((item, index) => <option key={index} value={item}>{item}</option>)\r\n                    }\r\n                </select>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"lc-main-div\">\r\n                <h6 className=\"fg-grayMouse\">It appears the API is not available ! Thats bad</h6>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ListComponent\r\n","import React, {  useState } from 'react'\r\nimport ChartsComponent from './charts.component';\r\nimport ListComponent from './list.component';\r\n\r\nconst MainComponent = () => {\r\n    const [country, setCountry] = useState(undefined);\r\n\r\n    const onCountrySelected = (country) => {\r\n        setCountry(country)\r\n        console.log('coun' + country)\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"cell-3\">\r\n                    <ListComponent onCountrySelected={onCountrySelected} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"cell-12\">\r\n                    <ChartsComponent country={country} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainComponent\r\n","import './App.css';\r\nimport MainComponent from './components/main.component';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"heading\">\r\n          <p>Covid Data Summary</p>\r\n          <div>Data from <a href=\"https://rapidapi.com/api-sports/api/covid-193\">Rapid API</a></div>\r\n        </div>\r\n        <div className=\"main-content\">\r\n          <MainComponent />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}